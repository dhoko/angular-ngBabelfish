angular.module("ngBabelfish",[]).run(["$rootScope","marvin","babelfishLang",function(n,a,e){n.$on(a.getRouteEvent(),function(n,a){e.init(a.name)})}]),angular.module("ngBabelfish").directive("i18nBind",["$rootScope","marvin","babelfish",function(n,a,e){return{scope:{translationKey:"=i18nBind",translationLang:"@i18nBindLang"},template:"{{translationKey}}",link:function(t,r,i){var o="",l=a.getNamespace();if(o=l?i.i18nBind.replace(l+".",""):i.i18nBind,i.i18nBindLang){if(e.isLangLoaded(i.i18nBindLang)){var u=e.get(i.i18nBindLang);return r.text(u[o])}n.$on("ngBabelfish.lang:loaded",function(){if(e.isLangLoaded(i.i18nBindLang)){var n=e.get(i.i18nBindLang);r.text(n[o])}})}}}}]),angular.module("ngBabelfish").directive("i18nLoad",["babelfish",function(n){return{link:function(a,e,t){e.on("click",function(){a.$apply(function(){n.updateLang(t.i18nLoad)})})}}}]),angular.module("ngBabelfish").factory("marvinMemory",function(){"use strict";var n={state:{current:"",loaded:!1},lang:{previous:"en-EN",current:"en-EN"},data:null,available:[],active:!1};return{get:function(){return n}}}),angular.module("ngBabelfish").provider("marvin",function(){"use strict";var n={state:"home",lang:"en-EN",url:"/i18n/languages.json",routeEventName:"$stateChangeSuccess",namespace:"i18n",lazy:!1,lazyConfig:[],current:"",log:!0};this.init=function(a){angular.extend(n,a)},this.lang=function(a){if(!a.lang)throw new Error("[babelfishProvider@lang] You must set the key lang");if(!a.url)throw new Error("[babelfishProvider@lang] You must set the key url");return n.lazy=!0,n.lazyConfig.push(a),this},this.$get=["$document",function(a){return{getConfig:function(){return n},getRouteEvent:function(){return n.routeEventName},getNamespace:function(){return n.namespace},getDefaultLang:function(){return n.lang?(a.documentElement.lang=n.lang.split("-")[0],n.lang):a.documentElement.lang+"-"+a.documentElement.lang.toUpperCase()},getLazyLangAvailable:function(){return n.lazyConfig.map(function(n){return n.lang})},getLazyConfig:function(a){var e=a||this.getDefaultLang();return n.lazyConfig.filter(function(n){return n.lang===e})[0]||{}},getLazyConfigByUrl:function(a){return n.lazyConfig.filter(function(n){return n===a})[0]},isVerbose:function(){return n.log},isLazy:function(){return n.lazy},isSolo:function(){return console.log("[@todo] Need to implement solo mode"),!1}}}]}),angular.module("ngBabelfish").service("babelfish",["$rootScope","marvin","marvinMemory","babelfishLang","marvinTasks",function(n,a,e,t,r){"use strict";function i(n){var e=d.data[n||d.lang.current]||{},t={};return a.isSolo()?angular.extend({},d.data._common||{},e):(e[d.state.current]||(a.isVerbose()&&console.warn("[ngBabelfish-translator@get] No translation available for the page %s for the  lang %s",d.state.current,n||d.lang.current),e[d.state.current]={}),angular.extend(t,{},e._common),angular.extend(t,e[d.state.current]))}function o(n){var e=n||d.lang.current;return a.isSolo()?angular.extend({},d.data._common||{},d.data[e]||{}):d.data[e]}function l(){return d.data}function u(n){return d.data&&!!d.data[n]}function s(){return d.lang.current}function g(){return d.active}function c(){return d.available.indexOf("_comon")>-1&&d.available.splice(d.available.indexOf("_comon"),1),d.available}function f(n){t.set(n,r.bindToScope)}var d=e.get();return{get:i,all:o,current:s,translations:l,languages:c,isLangLoaded:u,isLoaded:g,updateLang:f}}]),angular.module("ngBabelfish").service("babelfishLang",["$http","$rootScope","marvin","marvinMemory","marvinTasks",function(n,a,e,t,r){"use strict";function i(n){s.state.current=n,l().then(r.bindToScope)}function o(n,e){e=e||angular.noop,s.lang.previous=angular.copy(s.lang.current),s.lang.current=n,a.$emit("ngBabelfish.lang:setLanguage",s.current),e()}function l(a){s.lang.current;return a=a||e.getConfig().url,e.isLazy()&&(a=e.getLazyConfig(s.lang.current||e.getConfig().lang).url),n.get(a).error(function(){if(e.isVerbose())throw new Error("[babelfishLangr@load] Cannot load the translation file")}).success(u)}function u(n){var t=s.lang.current;e.isLazy()?(s.data={},s.data[t]=n,-1===s.available.indexOf(t)&&s.available.push(t)):(s.data=n,s.available=Object.keys(n)),a.$emit("ngBabelfish.lang:loaded",{lang:t})}var s=t.get();a.$on("ngBabelfish.marvin:requestTranslation",function(n,a){i(a.state,a.url)}),this.init=i,this.load=l,this.translate=u,this.set=o}]),angular.module("ngBabelfish").service("marvinTasks",["$rootScope","marvin","marvinMemory",function(n,a,e){"use strict";function t(){var e=i.lang.current;return a.isLazy()&&!i.data[e]?void n.$emit("ngBabelfish.marvin:requestTranslation",{state:i.state.current,url:a.getLazyConfig(e).url}):void r()}function r(){var e,t=i.lang.current,r=i.state.current,o={};(r!==i.state.previous||i.lang.current!==i.lang.previous)&&i.data[t]&&(e=i.data[t][r],e||(i.data[t][r]={},a.isVerbose()&&console.warn("[marvinTasks@setTranslation] No translation available for the page %s for the lang %s",r,t)),angular.extend(o,angular.extend({},i.data[t]._common),e),a.getNamespace()?n[a.getNamespace()]=o:(angular.extend(n,o),a.isVerbose()&&console.warn("[marvinTasks@setTranslation] It is better to Load i18n inside a namespace.")),n.$emit("ngBabelfish.translation:loaded",{currentState:r,lang:t}))}var i=e.get();this.bindToScope=t}]);