angular.module("ngBabelfish",[]).run(["$rootScope","marvin","babelfishLang",function(n,e,a){n.$on(e.getRouteEvent(),function(n,e){a.init(e.name)})}]),angular.module("ngBabelfish").directive("i18nBind",["$rootScope","marvin","babelfish",function(n,e,a){return{scope:{translationKey:"=i18nBind",translationLang:"@i18nBindLang"},template:"{{translationKey}}",link:function(t,r,i){var o="",l=e.getNamespace();if(o=l?i.i18nBind.replace(l+".",""):i.i18nBind,i.i18nBindLang){if(a.isLangLoaded(i.i18nBindLang)){var u=a.get(i.i18nBindLang);return r.text(u[o])}n.$on("ngBabelfish.lang:loaded",function(){if(a.isLangLoaded(i.i18nBindLang)){var n=a.get(i.i18nBindLang);r.text(n[o])}})}}}}]),angular.module("ngBabelfish").directive("i18nLoad",["babelfish",function(n){return{link:function(e,a,t){a.on("click",function(){e.$apply(function(){n.updateLang(t.i18nLoad)})})}}}]),angular.module("ngBabelfish").factory("babelfishEvent",["$rootScope",function(n){"use strict";var e={},a={set:function(n,a){e[n]=a},exec:function(n){(e[n]||angular.noop)()}};return n.$on("ngBabelfish.translation:loaded",function(n,e){e.previousLang!==e.lang&&a.exec("change:language")}),a}]),angular.module("ngBabelfish").factory("marvinMemory",function(){"use strict";var n={state:{current:"",loaded:!1},lang:{previous:"en-EN",current:"en-EN"},data:null,available:[],active:!1};return{get:function(){return n}}}),angular.module("ngBabelfish").provider("marvin",function(){"use strict";var n={state:"home",lang:"en-EN",url:"/i18n/languages.json",routeEventName:"$stateChangeSuccess",namespace:"i18n",lazy:!1,lazyConfig:[],current:"",log:!0,bindToScope:!0};this.init=function(e){angular.extend(n,e)},this.lang=function(e){if(!e.lang)throw new Error("[babelfishProvider@lang] You must set the key lang");if(!e.url)throw new Error("[babelfishProvider@lang] You must set the key url");return n.lazy=!0,n.lazyConfig.push(e),this},this.bindToScope=function(e){n.bindToScope=e},this.$get=["$document",function(e){return{getConfig:function(){return n},getRouteEvent:function(){return n.routeEventName},getNamespace:function(){return n.namespace},getDefaultLang:function(){return n.lang?(e.documentElement.lang=n.lang.split("-")[0],n.lang):e.documentElement.lang+"-"+e.documentElement.lang.toUpperCase()},getLazyLangAvailable:function(){return n.lazyConfig.map(function(n){return n.lang})},getLazyConfig:function(e){var a=e||this.getDefaultLang();return n.lazyConfig.filter(function(n){return n.lang===a})[0]||{}},getLazyConfigByUrl:function(e){return n.lazyConfig.filter(function(n){return n===e})[0]},isVerbose:function(){return n.log},isLazy:function(){return n.lazy},isBindToScope:function(){return n.bindToScope},isSolo:function(){return console.log("[@todo] Need to implement solo mode"),!1}}}]}),angular.module("ngBabelfish").service("babelfish",["$rootScope","marvin","marvinMemory","babelfishLang","marvinTasks","babelfishEvent",function(n,e,a,t,r,i){"use strict";function o(n){var a=v.data[n||v.lang.current]||{},t={};return a[v.state.current]||(e.isVerbose()&&console.warn("[ngBabelfish-translator@get] No translation available for the page %s for the lang %s",v.state.current,n||v.lang.current),a[v.state.current]={}),angular.extend(t,{},a._common),angular.extend(t,a[v.state.current])}function l(n){return v.data[n||v.lang.current]}function u(){return v.data}function s(n){return v.data&&!!v.data[n]}function g(){return v.lang.current}function c(){return v.active}function f(){return v.available.indexOf("_comon")>-1&&v.available.splice(v.available.indexOf("_comon"),1),v.available}function d(n){t.set(n,r.bindToScope)}var v=a.get();return{get:o,all:l,current:g,translations:u,languages:f,isLangLoaded:s,isLoaded:c,updateLang:d,on:i.set}}]),angular.module("ngBabelfish").service("babelfishLang",["$http","$rootScope","marvin","marvinMemory","marvinTasks",function(n,e,a,t,r){"use strict";function i(n){s.state.current=n,a.isBindToScope()&&l().then(r.bindToScope)}function o(n,a){a=a||angular.noop,s.lang.previous=angular.copy(s.lang.current),s.lang.current=n,e.$emit("ngBabelfish.lang:setLanguage",s.current),a()}function l(e){s.lang.current;return e=e||a.getConfig().url,a.isLazy()&&(e=a.getLazyConfig(s.lang.current||a.getConfig().lang).url),n.get(e).error(function(){if(a.isVerbose())throw new Error("[babelfishLangr@load] Cannot load the translation file")}).success(u)}function u(n){var t=s.lang.current;a.isLazy()?(s.data={},s.data[t]=n,-1===s.available.indexOf(t)&&s.available.push(t)):(s.data=n,s.available=Object.keys(n)),e.$emit("ngBabelfish.lang:loaded",{lang:t})}var s=t.get();e.$on("ngBabelfish.marvin:requestTranslation",function(n,e){i(e.state,e.url)}),this.init=i,this.load=l,this.translate=u,this.set=o}]),angular.module("ngBabelfish").service("marvinTasks",["$rootScope","marvin","marvinMemory",function(n,e,a){"use strict";function t(){var a=i.lang.current;return e.isLazy()&&!i.data[a]?void n.$emit("ngBabelfish.marvin:requestTranslation",{state:i.state.current,url:e.getLazyConfig(a).url}):void r()}function r(){var a,t=i.lang.current,r=i.state.current,o={};(r!==i.state.previous||i.lang.current!==i.lang.previous)&&i.data[t]&&(a=i.data[t][r],a||(i.data[t][r]={},e.isVerbose()&&console.warn("[marvinTasks@setTranslation] No translation available for the page %s for the lang %s",r,t)),angular.extend(o,angular.extend({},i.data[t]._common),a),e.isBindToScope()&&(e.getNamespace()?n[e.getNamespace()]=o:(angular.extend(n,o),e.isVerbose()&&console.warn("[marvinTasks@setTranslation] It is better to Load i18n inside a namespace."))),n.$emit("ngBabelfish.translation:loaded",{currentState:r,lang:t,previousLang:i.lang.previous}))}var i=a.get();this.bindToScope=t}]);